name: Build Image

on: 
  push:
      branches:
          - develop
  pull_request:
    types: [closed]
    branches:
      - main
      - develop

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push_to_registries:
    name: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DockerUsername }}
          password: ${{ secrets.DockerToken }}
      
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set Docker tag based on branch
        id: set_tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "::set-output name=tag::latest"
            echo "::set-output name=version::${{ github.event.pull_request.title }}"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "::set-output name=tag::develop"
          fi

      - name: Convert IMAGE_NAME to lowercase
        run: echo "IMAGE_NAME=$(echo ${{ env.IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --tag docker.io/${{ env.IMAGE_NAME }}:amd64-${{ steps.set_tag.outputs.tag }} \
            --tag ghcr.io/${{ env.IMAGE_NAME }}:amd64-${{ steps.set_tag.outputs.tag }} \
            .
          docker buildx build \
            --platform linux/arm64 \
            --push \
            --tag docker.io/${{ env.IMAGE_NAME }}:arm64-${{ steps.set_tag.outputs.tag }} \
            --tag ghcr.io/${{ env.IMAGE_NAME }}:arm64-${{ steps.set_tag.outputs.tag }} \
            .
          docker manifest create docker.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }} \
            docker.io/${{ env.IMAGE_NAME }}:amd64-${{ steps.set_tag.outputs.tag }} \
            docker.io/${{ env.IMAGE_NAME }}:arm64-${{ steps.set_tag.outputs.tag }}
          docker manifest push docker.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }}
          docker manifest create ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }} \
            ghcr.io/${{ env.IMAGE_NAME }}:amd64-${{ steps.set_tag.outputs.tag }} \
            ghcr.io/${{ env.IMAGE_NAME }}:arm64-${{ steps.set_tag.outputs.tag }}
          docker manifest push ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }}