{"ast":null,"code":"var _jsxFileName = \"/Users/alexkeith/encodarr/src/components/mediaManagement/MediaManagement.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useSettings from \"../../hooks/useSettings\";\nimport styles from \"./MediaManagement.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaManagement = () => {\n  _s();\n  const settings = useSettings();\n  const settingsArray = [];\n  for (let i in settings) {\n    settingsArray.push(settings[i]);\n  }\n  const [newSettings, setNewSettings] = useState(settingsArray);\n  console.log(settingsArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mediaManagement,\n    children: newSettings.map(setting => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [setting.name, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"input\",\n          value: setting.value,\n          onChange: e => setting.value = e.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n_s(MediaManagement, \"7ljErucHZNIZ64+KaTIqkYL1NWg=\", false, function () {\n  return [useSettings];\n});\n_c = MediaManagement;\nexport default MediaManagement;\nvar _c;\n$RefreshReg$(_c, \"MediaManagement\");","map":{"version":3,"names":["useState","useSettings","styles","jsxDEV","_jsxDEV","MediaManagement","_s","settings","settingsArray","i","push","newSettings","setNewSettings","console","log","className","mediaManagement","children","map","setting","name","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexkeith/encodarr/src/components/mediaManagement/MediaManagement.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport useSettings from \"../../hooks/useSettings\";\nimport styles from \"./MediaManagement.module.scss\";\nconst MediaManagement = () => {\n\tconst settings = useSettings();\n\n\tconst settingsArray: any = [];\n\tfor (let i in settings) {\n\t\tsettingsArray.push(settings[i]);\n\t}\n\n\tconst [newSettings, setNewSettings] = useState(settingsArray);\n\tconsole.log(settingsArray);\n\treturn (\n\t\t<div className={styles.mediaManagement}>\n\t\t\t{newSettings.map((setting: any) => (\n\t\t\t\t<div>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t{setting.name}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"input\"\n\t\t\t\t\t\t\tvalue={setting.value}\n\t\t\t\t\t\t\tonChange={(e) => (setting.value = e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\nexport default MediaManagement;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,aAAkB,GAAG,EAAE;EAC7B,KAAK,IAAIC,CAAC,IAAIF,QAAQ,EAAE;IACvBC,aAAa,CAACE,IAAI,CAACH,QAAQ,CAACE,CAAC,CAAC,CAAC;EAChC;EAEA,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAACQ,aAAa,CAAC;EAC7DK,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;EAC1B,oBACCJ,OAAA;IAAKW,SAAS,EAAEb,MAAM,CAACc,eAAgB;IAAAC,QAAA,EACrCN,WAAW,CAACO,GAAG,CAAEC,OAAY,iBAC7Bf,OAAA;MAAAa,QAAA,eACCb,OAAA;QAAAa,QAAA,GACEE,OAAO,CAACC,IAAI,eACbhB,OAAA;UACCiB,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEH,OAAO,CAACG,KAAM;UACrBC,QAAQ,EAAGC,CAAC,IAAML,OAAO,CAACG,KAAK,GAAGE,CAAC,CAACC,MAAM,CAACH;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAACvB,EAAA,CA1BID,eAAe;EAAA,QACHJ,WAAW;AAAA;AAAA6B,EAAA,GADvBzB,eAAe;AA2BrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}