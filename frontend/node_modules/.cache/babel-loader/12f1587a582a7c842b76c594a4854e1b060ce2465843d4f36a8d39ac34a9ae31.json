{"ast":null,"code":"var _jsxFileName = \"/Users/alexkeith/encodarr/src/components/profiles/Profiles.tsx\",\n  _s = $RefreshSig$();\nimport styles from \"./Profiles.module.scss\";\nimport Profile from \"../profile/Profile\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  children\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n_c = Modal;\nconst Profiles = () => {\n  _s();\n  const [profiles, setProfiles] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  useEffect(() => {\n    fetch(\"http://localhost:8000/profiles\").then(response => response.json()).then(data => setProfiles(data)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.profiles,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.model,\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: closeModal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Modal Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is the content of the modal.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.codecProfiles,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: \"Codec Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.profileContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: openModal,\n          children: profiles.map(profile => /*#__PURE__*/_jsxDEV(Profile, {\n            name: profile === null || profile === void 0 ? void 0 : profile.name,\n            codecs: profile === null || profile === void 0 ? void 0 : profile.codecs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_s(Profiles, \"gDpHPcd7EmxchUwOohhKACD9gs4=\");\n_c2 = Profiles;\nexport default Profiles;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"Profiles\");","map":{"version":3,"names":["styles","Profile","useEffect","useState","jsxDEV","_jsxDEV","Modal","isOpen","onClose","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Profiles","_s","profiles","setProfiles","isModalOpen","setIsModalOpen","openModal","closeModal","fetch","then","response","json","data","catch","error","console","model","codecProfiles","header","profileContainer","map","profile","name","codecs","_c2","$RefreshReg$"],"sources":["/Users/alexkeith/encodarr/src/components/profiles/Profiles.tsx"],"sourcesContent":["import styles from \"./Profiles.module.scss\";\nimport Profile from \"../profile/Profile\";\nimport { useEffect, useState } from \"react\";\n\nconst Modal = ({ isOpen, onClose, children }: any) => {\n\tif (!isOpen) return null;\n\n\treturn (\n\t\t<div className=\"modal-overlay\">\n\t\t\t<div className=\"modal\">\n\t\t\t\t<button className=\"close-button\" onClick={onClose}>\n\t\t\t\t\tClose\n\t\t\t\t</button>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst Profiles = () => {\n\tconst [profiles, setProfiles] = useState([]);\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\tconst openModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\tconst closeModal = () => {\n\t\tsetIsModalOpen(false);\n\t};\n\n\tuseEffect(() => {\n\t\tfetch(\"http://localhost:8000/profiles\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => setProfiles(data))\n\t\t\t.catch((error) => console.error(error));\n\t}, []);\n\n\treturn (\n\t\t<div className={styles.profiles}>\n\t\t\t<div className={styles.model}>\n\t\t\t\t<Modal isOpen={isModalOpen} onClose={closeModal}>\n\t\t\t\t\t<h2>Modal Content</h2>\n\t\t\t\t\t<p>This is the content of the modal.</p>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t\t<div className={styles.codecProfiles}>\n\t\t\t\t<div className={styles.header}>Codec Profiles</div>\n\t\t\t\t<div className={styles.profileContainer}>\n\t\t\t\t\t<div onClick={openModal}>\n\t\t\t\t\t\t{profiles.map((profile: any) => (\n\t\t\t\t\t\t\t<Profile name={profile?.name} codecs={profile?.codecs} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default Profiles;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAc,CAAC,KAAK;EACrD,IAAI,CAACF,MAAM,EAAE,OAAO,IAAI;EAExB,oBACCF,OAAA;IAAKK,SAAS,EAAC,eAAe;IAAAD,QAAA,eAC7BJ,OAAA;MAAKK,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACrBJ,OAAA;QAAQK,SAAS,EAAC,cAAc;QAACC,OAAO,EAAEH,OAAQ;QAAAC,QAAA,EAAC;MAEnD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRN,QAAQ;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAACC,EAAA,GAbIV,KAAK;AAeX,MAAMW,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMoB,SAAS,GAAGA,CAAA,KAAM;IACvBD,cAAc,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACxBF,cAAc,CAAC,KAAK,CAAC;EACtB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACfuB,KAAK,CAAC,gCAAgC,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKT,WAAW,CAACS,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACC1B,OAAA;IAAKK,SAAS,EAAEV,MAAM,CAACmB,QAAS;IAAAV,QAAA,gBAC/BJ,OAAA;MAAKK,SAAS,EAAEV,MAAM,CAACiC,KAAM;MAAAxB,QAAA,eAC5BJ,OAAA,CAACC,KAAK;QAACC,MAAM,EAAEc,WAAY;QAACb,OAAO,EAAEgB,UAAW;QAAAf,QAAA,gBAC/CJ,OAAA;UAAAI,QAAA,EAAI;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBV,OAAA;UAAAI,QAAA,EAAG;QAAiC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNV,OAAA;MAAKK,SAAS,EAAEV,MAAM,CAACkC,aAAc;MAAAzB,QAAA,gBACpCJ,OAAA;QAAKK,SAAS,EAAEV,MAAM,CAACmC,MAAO;QAAA1B,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDV,OAAA;QAAKK,SAAS,EAAEV,MAAM,CAACoC,gBAAiB;QAAA3B,QAAA,eACvCJ,OAAA;UAAKM,OAAO,EAAEY,SAAU;UAAAd,QAAA,EACtBU,QAAQ,CAACkB,GAAG,CAAEC,OAAY,iBAC1BjC,OAAA,CAACJ,OAAO;YAACsC,IAAI,EAAED,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,IAAK;YAACC,MAAM,EAAEF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE;UAAO;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACxD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAACG,EAAA,CAxCID,QAAQ;AAAAwB,GAAA,GAARxB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}