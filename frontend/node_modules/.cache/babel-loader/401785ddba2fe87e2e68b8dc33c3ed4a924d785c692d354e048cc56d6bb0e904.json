{"ast":null,"code":"var _jsxFileName = \"/Users/alexkeith/encodarr/src/components/mediaManagement/MediaManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport useSettings from \"../../hooks/useSettings\";\nimport styles from \"./MediaManagement.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaManagement = () => {\n  _s();\n  const initialSettings = useSettings();\n  const [settings, setSettings] = useState(initialSettings);\n  const handleInputChange = (name, value) => {\n    // Find the setting in the state and update its value\n    const updatedSettings = settings.map(setting => setting.name === name ? {\n      ...setting,\n      value\n    } : setting);\n\n    // Update the state with the new settings\n    setSettings(updatedSettings);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mediaManagement,\n    children: settings.map(setting => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [setting.name, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"input\",\n          value: setting.value,\n          onChange: e => handleInputChange(setting.name, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }, this)\n    }, setting.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n_s(MediaManagement, \"47prHdXrgSVE5yNu57hD9uPWf1c=\", false, function () {\n  return [useSettings];\n});\n_c = MediaManagement;\nexport default MediaManagement;\nvar _c;\n$RefreshReg$(_c, \"MediaManagement\");","map":{"version":3,"names":["React","useState","useSettings","styles","jsxDEV","_jsxDEV","MediaManagement","_s","initialSettings","settings","setSettings","handleInputChange","name","value","updatedSettings","map","setting","className","mediaManagement","children","type","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexkeith/encodarr/src/components/mediaManagement/MediaManagement.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport useSettings from \"../../hooks/useSettings\";\nimport styles from \"./MediaManagement.module.scss\";\n\nconst MediaManagement = () => {\n\tconst initialSettings = useSettings();\n\tconst [settings, setSettings] = useState(initialSettings);\n\n\tconst handleInputChange = (name: any, value: any) => {\n\t\t// Find the setting in the state and update its value\n\t\tconst updatedSettings: any = settings.map((setting: any) =>\n\t\t\tsetting.name === name ? { ...setting, value } : setting\n\t\t);\n\n\t\t// Update the state with the new settings\n\t\tsetSettings(updatedSettings);\n\t};\n\n\treturn (\n\t\t<div className={styles.mediaManagement}>\n\t\t\t{settings.map((setting: any) => (\n\t\t\t\t<div key={setting.name}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t{setting.name}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"input\"\n\t\t\t\t\t\t\tvalue={setting.value}\n\t\t\t\t\t\t\tonChange={(e) => handleInputChange(setting.name, e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default MediaManagement;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,eAAe,GAAGN,WAAW,CAAC,CAAC;EACrC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACO,eAAe,CAAC;EAEzD,MAAMG,iBAAiB,GAAGA,CAACC,IAAS,EAAEC,KAAU,KAAK;IACpD;IACA,MAAMC,eAAoB,GAAGL,QAAQ,CAACM,GAAG,CAAEC,OAAY,IACtDA,OAAO,CAACJ,IAAI,KAAKA,IAAI,GAAG;MAAE,GAAGI,OAAO;MAAEH;IAAM,CAAC,GAAGG,OACjD,CAAC;;IAED;IACAN,WAAW,CAACI,eAAe,CAAC;EAC7B,CAAC;EAED,oBACCT,OAAA;IAAKY,SAAS,EAAEd,MAAM,CAACe,eAAgB;IAAAC,QAAA,EACrCV,QAAQ,CAACM,GAAG,CAAEC,OAAY,iBAC1BX,OAAA;MAAAc,QAAA,eACCd,OAAA;QAAAc,QAAA,GACEH,OAAO,CAACJ,IAAI,eACbP,OAAA;UACCe,IAAI,EAAC,OAAO;UACZP,KAAK,EAAEG,OAAO,CAACH,KAAM;UACrBQ,QAAQ,EAAGC,CAAC,IAAKX,iBAAiB,CAACK,OAAO,CAACJ,IAAI,EAAEU,CAAC,CAACC,MAAM,CAACV,KAAK;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC,GARCX,OAAO,CAACJ,IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASjB,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAACpB,EAAA,CA9BID,eAAe;EAAA,QACIJ,WAAW;AAAA;AAAA0B,EAAA,GAD9BtB,eAAe;AAgCrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}