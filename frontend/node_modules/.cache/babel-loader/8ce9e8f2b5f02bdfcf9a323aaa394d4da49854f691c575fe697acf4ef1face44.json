{"ast":null,"code":"var _jsxFileName = \"/Users/alexkeith/encodarr/src/components/mediaManagement/MediaManagement.tsx\";\nimport styles from \"./MediaManagement.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaManagement = () => {\n  const rootFolders = [{\n    path: \"/tv\",\n    freeSpace: \"782.3GGB\",\n    unmappedFolders: 0\n  }, {}];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mediaManagement,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rootFolders,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: \"Root Folders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Free Space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Unmapped Folders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 6\n        }, this), rootFolders.map(rootFolder => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: rootFolder.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: rootFolder.freeSpace\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: rootFolder.unmappedFolders\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 8\n          }, this)]\n        }, rootFolder.path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.button,\n        children: \"Choose Another Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n_c = MediaManagement;\nexport default MediaManagement;\nvar _c;\n$RefreshReg$(_c, \"MediaManagement\");","map":{"version":3,"names":["styles","jsxDEV","_jsxDEV","MediaManagement","rootFolders","path","freeSpace","unmappedFolders","className","mediaManagement","children","header","fileName","_jsxFileName","lineNumber","columnNumber","table","map","rootFolder","button","_c","$RefreshReg$"],"sources":["/Users/alexkeith/encodarr/src/components/mediaManagement/MediaManagement.tsx"],"sourcesContent":["import styles from \"./MediaManagement.module.scss\";\nconst MediaManagement = () => {\n\tconst rootFolders = [\n\t\t{ path: \"/tv\", freeSpace: \"782.3GGB\", unmappedFolders: 0 },\n\t\t{},\n\t];\n\n\treturn (\n\t\t<div className={styles.mediaManagement}>\n\t\t\t<div className={styles.rootFolders}>\n\t\t\t\t<div className={styles.header}>Root Folders</div>\n\t\t\t\t<table className={styles.table}>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Path</th>\n\t\t\t\t\t\t<th>Free Space</th>\n\t\t\t\t\t\t<th>Unmapped Folders</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{rootFolders.map((rootFolder: any) => (\n\t\t\t\t\t\t<tr key={rootFolder.path}>\n\t\t\t\t\t\t\t<tbody>{rootFolder.path}</tbody>\n\t\t\t\t\t\t\t<tbody>{rootFolder.freeSpace}</tbody>\n\t\t\t\t\t\t\t<tbody>{rootFolder.unmappedFolders}</tbody>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</table>\n\t\t\t\t<div className={styles.button}>Choose Another Folder</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default MediaManagement;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC7B,MAAMC,WAAW,GAAG,CACnB;IAAEC,IAAI,EAAE,KAAK;IAAEC,SAAS,EAAE,UAAU;IAAEC,eAAe,EAAE;EAAE,CAAC,EAC1D,CAAC,CAAC,CACF;EAED,oBACCL,OAAA;IAAKM,SAAS,EAAER,MAAM,CAACS,eAAgB;IAAAC,QAAA,eACtCR,OAAA;MAAKM,SAAS,EAAER,MAAM,CAACI,WAAY;MAAAM,QAAA,gBAClCR,OAAA;QAAKM,SAAS,EAAER,MAAM,CAACW,MAAO;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDb,OAAA;QAAOM,SAAS,EAAER,MAAM,CAACgB,KAAM;QAAAN,QAAA,gBAC9BR,OAAA;UAAAQ,QAAA,gBACCR,OAAA;YAAAQ,QAAA,EAAI;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbb,OAAA;YAAAQ,QAAA,EAAI;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBb,OAAA;YAAAQ,QAAA,EAAI;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,EACJX,WAAW,CAACa,GAAG,CAAEC,UAAe,iBAChChB,OAAA;UAAAQ,QAAA,gBACCR,OAAA;YAAAQ,QAAA,EAAQQ,UAAU,CAACb;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChCb,OAAA;YAAAQ,QAAA,EAAQQ,UAAU,CAACZ;UAAS;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrCb,OAAA;YAAAQ,QAAA,EAAQQ,UAAU,CAACX;UAAe;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAHnCG,UAAU,CAACb,IAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIpB,CACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACRb,OAAA;QAAKM,SAAS,EAAER,MAAM,CAACmB,MAAO;QAAAT,QAAA,EAAC;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAACK,EAAA,GA5BIjB,eAAe;AA6BrB,eAAeA,eAAe;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}